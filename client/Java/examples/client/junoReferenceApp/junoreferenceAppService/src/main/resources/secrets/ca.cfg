[ req ]
prompt = no
distinguished_name = ca_dn

[ ca_dn ]
organizationName = "Juno Test"
commonName = "cert-authority"
countryName = "US"
stateOrProvinceName = "California"
EOF

# Generate the CA's self-signed certificate and private key
openssl req -x509 -newkey rsa:4096 -nodes -days 3650 -keyout ca.pem -out ca.crt -config ca.cfg

# echo "CA's self-signed certificate"
# openssl x509 -in ca.crt -noout -text

cat << EOF > srv.cfg
[ req ]
prompt = no
distinguished_name = ca_dn

[ ca_dn ]
organizationName = "Juno Test"
commonName = "Juno-test-server"
countryName = "US"
stateOrProvinceName = "California"
EOF

# Generate server's CSR
openssl req -newkey rsa:4096 -nodes  -keyout server.pem -out server.csr -config srv.cfg

# Sign the certificate signing request
openssl x509 -req -in server.csr -days 3650 -CA ca.crt -CAkey ca.pem -CAcreateserial -out server.crt

# echo "Server's certificate"
# openssl x509 -in server.crt -noout -text

echo "Verify Server's Certificate with CA's certificate"
openssl verify -CAfile ca.crt server.crt


# Generate Encryption keys
cat << EOF > keystore.toml
# Sample Keystore
hexKeys = [
"beeb9cda0e71ed77f4a88e817e1db83cf6e333e46669d84b5d56e415779d1cbc",
"707b0af23206d1dc20b0571bd26ec9906c4a67fd6d5812ca0ab20ec9fa688d14",
"7e2e8689a4fba9b68a0c72fb41ca8ca9373533ea8298f7d632e6e63eba390273",
"4ec3b572693917e463a0814acfd4c74e817cf5d18910c60de079a4af9ab47594",
"fffa1f5e6af1e1af1bd45a83d8ac93730c84dc8f72aab9703753eba76acd7685",
"94afe8456ff32a84772f0aff8dcdb1b50bbd87f34cf4b87adc2920148ea34609",
"20a069cfac613116331e06abc3ebefb9c4707aa2e1127889e3075c732bbe9f90",
"a38e6394476529c8431fd7869521c92dc15ef4f7c6fa64c55954a3f330ccb63f",
"7e39f22b6ef71b862a92717e586f96989cec00c0c67ed8d2160ca2f602e596d3",
"356bd2e835bc21f0aec1fc0edf2c389febf0a5fbe1609912d66dc13fdab189bd",
]
